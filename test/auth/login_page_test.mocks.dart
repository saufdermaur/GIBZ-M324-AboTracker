// Mocks generated by Mockito 5.4.5 from annotations
// in abo_tracker/test/auth/login_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:abo_tracker/auth/auth_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_auth_ui/supabase_auth_ui.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResponse_0 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_0(Object parent, Invocation parentInvocation) : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthResponse> signInWithEmailPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#signInWithEmailPassword, [email, password]),
        returnValue: _i4.Future<_i2.AuthResponse>.value(
          _FakeAuthResponse_0(
            this,
            Invocation.method(#signInWithEmailPassword, [email, password]),
          ),
        ),
      ) as _i4.Future<_i2.AuthResponse>);

  @override
  _i4.Future<_i2.AuthResponse> signUpWithEmailPassword(
    String? nickname,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#signUpWithEmailPassword, [
          nickname,
          email,
          password,
        ]),
        returnValue: _i4.Future<_i2.AuthResponse>.value(
          _FakeAuthResponse_0(
            this,
            Invocation.method(#signUpWithEmailPassword, [
              nickname,
              email,
              password,
            ]),
          ),
        ),
      ) as _i4.Future<_i2.AuthResponse>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(#signOut, []),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
